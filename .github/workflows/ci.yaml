name: ci
on:
  push:
    branches:
      - main
    paths-ignore:
      - 'README.md'
  pull_request:
    paths-ignore:
      - 'README.md'
jobs:
  lint:
    strategy:
      matrix:
        go-version: [1.21.x]
        os: [
          # NOTE: ignore windows because it will be timeout
          #windows-latest,
          macos-latest,
          ubuntu-latest
        ]
    name: golangci-lint
    runs-on: ${{ matrix.os }}
    steps:
      - name: Install Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go-version }}
      - uses: actions/checkout@v4
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v4
        with:
          version: v1.55.2
      - name: go vet
        run: go vet ./...
      - name: go build
        run: go build
  test:
    strategy:
      matrix:
        go-version: [1.21.x]
        os: [windows-latest, macos-latest, ubuntu-latest]
    name: test
    runs-on: ${{ matrix.os }}
    steps:
      - name: Install Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.go-version }}
      - name: Checkout code
        uses: actions/checkout@v4
      - uses: actions/cache@v4.0.1
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
      - name: go test
        run: go test -v ./... -coverprofile=coverage.out
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - uses: k1LoW/octocov-action@v0
        if: runner.os == 'Linux'
      - name: Install goveralls
        run: go install github.com/mattn/goveralls@latest
      - name: Send coverage
        if: runner.os == 'Linux'
        env:
          COVERALLS_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: goveralls -coverprofile=coverage.out -service=github
